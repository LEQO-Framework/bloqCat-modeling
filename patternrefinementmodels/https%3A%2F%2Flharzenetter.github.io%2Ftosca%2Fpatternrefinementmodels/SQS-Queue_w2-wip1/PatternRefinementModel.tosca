<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<Definitions xmlns="http://docs.oasis-open.org/tosca/ns/2011/12" xmlns:winery="http://www.opentosca.org/winery/extensions/tosca/2013/02/12" xmlns:selfservice="http://www.eclipse.org/winery/model/selfservice" xmlns:testwineryopentoscaorg="http://test.winery.opentosca.org" targetNamespace="https://lharzenetter.github.io/tosca/patternrefinementmodels" id="patternrefinementmodels-SQS-Queue_w2-wip1">
    <PatternRefinementModel isPdrm="yes" name="SQS-Queue_w2-wip1" targetNamespace="https://lharzenetter.github.io/tosca/patternrefinementmodels">
        <Detector>
            <NodeTemplate xmlns:cloudComputingPatterns="https://patternpedia.org/patternLanguages/cloudComputingPatterns" name="Message-oriented-Middleware" minInstances="1" maxInstances="1" type="cloudComputingPatterns:Message-oriented-Middleware" id="d_Message-oriented-Middleware_0" winery:x="449" winery:y="294">
                <Properties>
                    <ex:Properties xmlns:ex="http://www.example.org" xmlns="http://www.example.org" xmlns:CloudComputingPatterns="https://patternpedia.org/patternLanguages/cloudComputingPatterns" xmlns:researchobject="http://www.eclipse.org/winery/model/researchobject" xmlns:yml="http://docs.oasis-open.org/tosca/ns/simple/yaml/1.3"/>
                </Properties>
                <Capabilities/>
                <Policies/>
            </NodeTemplate>
            <NodeTemplate xmlns:eip="https://patternpedia.org/patternLanguages/eip" name="Message-Channel" minInstances="1" maxInstances="1" type="eip:Message-Channel" id="d_Message-Channel_0" winery:x="453" winery:y="84">
                <Properties>
                    <ex:Properties xmlns:ex="http://www.example.org" xmlns="http://www.example.org" xmlns:EnterpriseIntegrationPatterns="https://patternpedia.org/patternLanguages/eip" xmlns:researchobject="http://www.eclipse.org/winery/model/researchobject" xmlns:yml="http://docs.oasis-open.org/tosca/ns/simple/yaml/1.3"/>
                </Properties>
                <Capabilities/>
                <Policies>
                    <Policy xmlns:cloudComputingPatterns="https://patternpedia.org/patternLanguages/cloudComputingPatterns" name="ExactlyOnce" policyType="cloudComputingPatterns:Exactly-once-Delivery"/>
                    <Policy xmlns:behaviorPatternsLukas="https://lharzenetter.github.io/tosca/patterns/policytypes" name="Security" policyType="behaviorPatternsLukas:Information-Obscurity"/>
                </Policies>
            </NodeTemplate>
            <NodeTemplate xmlns:ntyIgeneral="https://lharzenetter.github.io/tosca/nodetypes" name="AWS_w1-wip1" minInstances="1" maxInstances="1" type="ntyIgeneral:AWS_w1-wip1" id="d_AWS_w1-wip1_0" winery:x="391" winery:y="473">
                <Properties>
                    <ntyIgeneral:AWS_w1-wip1 xmlns="https://lharzenetter.github.io/tosca/nodetypes">
                        <Account/>
                    </ntyIgeneral:AWS_w1-wip1>
                </Properties>
                <Capabilities/>
            </NodeTemplate>
            <RelationshipTemplate xmlns:ToscaBaseTypes="http://docs.oasis-open.org/tosca/ns/2011/12/ToscaBaseTypes" name="HostedOn" type="ToscaBaseTypes:HostedOn" id="d_con_HostedOn_1">
                <Properties>
                    <ex:Properties xmlns:ex="http://www.example.org" xmlns="http://www.example.org" xmlns:researchobject="http://www.eclipse.org/winery/model/researchobject" xmlns:yml="http://docs.oasis-open.org/tosca/ns/simple/yaml/1.3"/>
                </Properties>
                <SourceElement ref="d_Message-Channel_0"/>
                <TargetElement ref="d_Message-oriented-Middleware_0"/>
            </RelationshipTemplate>
            <RelationshipTemplate xmlns:ToscaBaseTypes="http://docs.oasis-open.org/tosca/ns/2011/12/ToscaBaseTypes" name="HostedOn" type="ToscaBaseTypes:HostedOn" id="d_con_HostedOn_0">
                <Properties>
                    <ex:Properties xmlns:ex="http://www.example.org" xmlns="http://www.example.org" xmlns:researchobject="http://www.eclipse.org/winery/model/researchobject" xmlns:yml="http://docs.oasis-open.org/tosca/ns/simple/yaml/1.3"/>
                </Properties>
                <SourceElement ref="d_Message-oriented-Middleware_0"/>
                <TargetElement ref="d_AWS_w1-wip1_0"/>
            </RelationshipTemplate>
        </Detector>
        <RelationMappings>
            <RelationMapping xmlns:relationsLukas="https://lharzenetter.github.io/tosca/relationshiptypes" relationType="relationsLukas:JMS" direction="ingoing" detectorNode="d_Message-Channel_0" refinementNode="rs_SQS-Queue_w1-wip1_0" id="relMap0"/>
            <RelationMapping xmlns:ToscaBaseTypes="http://docs.oasis-open.org/tosca/ns/2011/12/ToscaBaseTypes" relationType="ToscaBaseTypes:HostedOn" direction="ingoing" detectorNode="d_Message-oriented-Middleware_0" refinementNode="rs_SimpleQueueService_w1-wip1_0" id="relMap2"/>
        </RelationMappings>
        <PermutationMappings/>
        <RefinementStructure>
            <NodeTemplate xmlns:ntyIgeneral="https://lharzenetter.github.io/tosca/nodetypes" name="AWS_w1-wip1" minInstances="1" maxInstances="1" type="ntyIgeneral:AWS_w1-wip1" id="rs_AWS_w1-wip1_0" winery:x="651" winery:y="551">
                <Properties>
                    <ntyIgeneral:AWS_w1-wip1 xmlns="https://lharzenetter.github.io/tosca/nodetypes">
                        <Account/>
                    </ntyIgeneral:AWS_w1-wip1>
                </Properties>
                <Capabilities/>
            </NodeTemplate>
            <NodeTemplate xmlns:ntyIgeneral="https://lharzenetter.github.io/tosca/nodetypes" name="SimpleQueueService_w1-wip1" minInstances="1" maxInstances="1" type="ntyIgeneral:SimpleQueueService_w1-wip1" id="rs_SimpleQueueService_w1-wip1_0" winery:x="649" winery:y="361">
                <Properties>
                    <ntyIgeneral:SimpleQueueService_w1-wip1 xmlns="https://lharzenetter.github.io/tosca/nodetypes">
                        <Region/>
                    </ntyIgeneral:SimpleQueueService_w1-wip1>
                </Properties>
                <Capabilities/>
            </NodeTemplate>
            <NodeTemplate xmlns:ntyIgeneral="https://lharzenetter.github.io/tosca/nodetypes" name="SQS-Queue_w1-wip1" minInstances="1" maxInstances="1" type="ntyIgeneral:SQS-Queue_w1-wip1" id="rs_SQS-Queue_w1-wip1_0" winery:x="634" winery:y="146">
                <Properties>
                    <ex:Properties xmlns:ex="http://www.example.org" xmlns="http://www.example.org">
                        <Typ>FIFO</Typ>
                        <ServersideEncryption>true</ServersideEncryption>
                        <MasterKey>default</MasterKey>
                    </ex:Properties>
                </Properties>
                <Capabilities/>
            </NodeTemplate>
            <RelationshipTemplate xmlns:ToscaBaseTypes="http://docs.oasis-open.org/tosca/ns/2011/12/ToscaBaseTypes" name="HostedOn" type="ToscaBaseTypes:HostedOn" id="rs_con_HostedOn_0">
                <SourceElement ref="rs_SQS-Queue_w1-wip1_0"/>
                <TargetElement ref="rs_SimpleQueueService_w1-wip1_0"/>
            </RelationshipTemplate>
            <RelationshipTemplate xmlns:ToscaBaseTypes="http://docs.oasis-open.org/tosca/ns/2011/12/ToscaBaseTypes" name="HostedOn" type="ToscaBaseTypes:HostedOn" id="rs_con_HostedOn_1">
                <Properties>
                    <ex:Properties xmlns:ex="http://www.example.org" xmlns="http://www.example.org" xmlns:researchobject="http://www.eclipse.org/winery/model/researchobject" xmlns:yml="http://docs.oasis-open.org/tosca/ns/simple/yaml/1.3"/>
                </Properties>
                <SourceElement ref="rs_SimpleQueueService_w1-wip1_0"/>
                <TargetElement ref="rs_AWS_w1-wip1_0"/>
            </RelationshipTemplate>
        </RefinementStructure>
        <AttributeMappings/>
        <StayMappings>
            <StayMapping detectorNode="d_AWS_w1-wip1_0" refinementNode="rs_AWS_w1-wip1_0" id="stayMap0"/>
        </StayMappings>
        <DeploymentArtifactMappings/>
        <PermutationOptions/>
        <BehaviorPatternMappings>
            <BehaviorPatternMapping behaviorPattern="ExactlyOnce" detectorNode="d_Message-Channel_0" refinementNode="rs_SQS-Queue_w1-wip1_0" id="behaviorPatternMap0">
                <Property key="Typ" value="FIFO"/>
            </BehaviorPatternMapping>
            <BehaviorPatternMapping behaviorPattern="Security" detectorNode="d_Message-Channel_0" refinementNode="rs_SQS-Queue_w1-wip1_0" id="behaviorPatternMap1">
                <Property key="ServersideEncryption" value="true"/>
            </BehaviorPatternMapping>
            <BehaviorPatternMapping behaviorPattern="Security" detectorNode="d_Message-Channel_0" refinementNode="rs_SQS-Queue_w1-wip1_0" id="behaviorPatternMap2">
                <Property key="MasterKey" value="default"/>
            </BehaviorPatternMapping>
        </BehaviorPatternMappings>
    </PatternRefinementModel>
</Definitions>
